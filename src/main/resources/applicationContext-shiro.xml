<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--配置全局权限过滤器-->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <!--shiro最核心组件，具体后面说-->
        <property name="securityManager" ref="securityManager"/>
        <!--设置没有登录时的跳转地址-->
        <property name="loginUrl" value="/index"/>
        <!--设置权限不足时的跳转地址-->
        <property name="unauthorizedUrl" value="/static/html/noPerm.html"/>
        <!--对哪个后端接口使用哪个过滤器进行配置，等号后边是shiro内置过滤器的名字-->
        <property name="filterChainDefinitions">
            <value>
                <!--匿名访问，/api/login是登陆接口，当然可以随便访问-->
                /api/login = anon
                /api/test? = authc
                <!--本工程中上传文件的接口，只允许有common角色的用户访问-->
                /api/file = roles[common]
                <!--用户退出登录的接口，后端不需要实现该接口，logout拦截到/api/logout的url后，就自动清除登录状态回到首页了-->
                <!--因为在web.xml中设置的url-parttern是/api/*，随意只有api开头的url才会被拦截-->
                /api/logout = logout
                <!--使用自定义拦截器的接口-->
                <!--/api/selfFilter = myFilter-->
                <!--其他所有接口都需要认证，也就是需要之前输入过账号密码登录过-->
                /** = authc
            </value>
        </property>
        <!--加入自定义filter，在filterChainDefinitions可以通过key来引用-->
        <!--<property name="filters">-->
        <!--<map>-->
        <!--<entry key="myFilter">-->
        <!--<bean class="MyFilter"/>-->
        <!--</entry>-->
        <!--</map>-->
        <!--</property>-->
    </bean>
</beans>